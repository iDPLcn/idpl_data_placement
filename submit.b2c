universe = parallel

executable = placement.sh

#SRC_HOST=flashio-osg.calit2.optiputer.net
#SRC_PATH=/export/rocks/install/rolls/os/6.1.1/x86_64/RedHat/RPMS/kernel-2.6.32-431.5.1.el6.x86_64.rpm
#DST_HOST=komatsu.chtc.wisc.edu
#DST_PATH=kernel-2.6.32-431.5.1.el6.x86_64.rpm

SRC_HOST=dell01.jsi.buaa.edu.cn
SRC_PATH=/home/zwzhang/data/1GB.dat
DST_HOST=idplcnic2
DST_PATH=1GB.dat

# A promise that jobs will not run more often than this (in seconds)
# Required for the the job to run multiple times successfully.
LEASE=120

# A run is allowed to take this long (in seconds) to set up; otherwise
# that run is skipped
# comment by Jarvis
cron_window=120

# Try to run jobs on this schedule
#cron_minute=0-59/3
# comment by Jarvis
cron_minute=0

+SrcHost = "$(SRC_HOST)"
+SrcPath = "$(SRC_PATH)"
+DstHost = "$(DST_HOST)"
+DstPath = "$(DST_PATH)"

# Arguments are:
# 1. Sending host
# 2. File to send (on the sending host)
# 3. Receiving host # 4. Location to write file (on the receiving host)
arguments = $(SRC_HOST) $(SRC_PATH) $(DST_HOST) $(DST_PATH) $(LEASE)


should_transfer_files = yes
when_to_transfer_output = on_exit
getenv = true

#output = f2k.out.$(Node)
#error  = f2k.err.$(Node)
#log    = f2k.log
output = b2c.out.$(Node)
error  = b2c.err.$(Node)
log    = b2c.log

#+WantRemoteIO = true
+WantIOProxy = true

# Keep running the job
# comment by Jarvis
on_exit_remove=false
# every 5 minutes

machine_count = 1
requirements = (Machine == "$(SRC_HOST)")
queue

machine_count = 1
requirements = (Machine == "$(DST_HOST)")
queue
